Description: >-
  Creates resources (S3 Bucket, IAM roles, SageMaker Notebook instance) for
  the genomic clustering with SageMaker demo
Parameters:

  NotebookInstanceType:
    Type: "String"
    Default: ml.m4.xlarge
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.p2.xlarge
      - ml.p3.2xlarge
    Description: SageMaker notebook instance type. Defaults to ml.t2.medium.

  NotebookPrefix:
    Type: String
    Default: wps201
    AllowedValues:
      - wps201

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
  
  SageMakerIamRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub ${NotebookPrefix}-AmazonSageMaker-ExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "sagemaker.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/service-role/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"

  SageMakerS3Policy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: !Sub "SageMaker-S3Access"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - Effect: "Allow"
            Action: 
              - "s3:GetObject"
              - "s3:PutObject"
              - "s3:DeleteObject"
              - "s3:ListBucket"
            Resource: "arn:aws:s3:::*"
      Roles: 
        - Ref: SageMakerIamRole

  NotebookLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnCreate:
        - Content:
            Fn::Base64: |
              #!/bin/bash
              set -e
              sudo -i -u ec2-user bash << EOF
              echo "Setup the Workshop exercises"
              # TODO: point this to a specific release, only include notebook material
              git clone https://github.com/wleepang/reinvent-2018-wps201.git ~/SageMaker/wps201/
              
              cd ~/SageMaker/wps201/ipynb
              find -name '*.ipynb' -exec sed -i 's/<<your_s3_bucket_name_here>>/${S3Bucket}/g' {} +
              
              EOF
      OnStart:
        - Content:
            Fn::Base64: |
              #!/bin/bash
              set -e

              echo "Creating custom conda enviornment"
              cat > /home/ec2-user/wps201-setup.sh << EOF
              #!/bin/bash
              set -e
              cd /home/ec2-user/SageMaker/wps201
              echo "Updating base conda enviornment"
              conda update -n base conda -y
              echo "Installing wps201 conda env"
              conda env update
              source activate wps201
              echo "Finished OnStart script"
              EOF

              chown ec2-user:ec2-user /home/ec2-user/wps201-setup.sh
              chmod 755 /home/ec2-user/wps201-setup.sh

              sudo -i -u ec2-user bash << EOF
              echo "Creating wps201 conda env in background process."
              nohup /home/ec2-user/wps201-setup.sh &
              EOF

  SageMakerNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      NotebookInstanceName: !Sub ${NotebookPrefix}-SessionInstance
      InstanceType: !Ref NotebookInstanceType
      RoleArn: !GetAtt SageMakerIamRole.Arn
      LifecycleConfigName: !GetAtt NotebookLifecycleConfig.NotebookInstanceLifecycleConfigName

Outputs:
  SageMakerNotebookInstance:
    Value: !GetAtt SageMakerNotebookInstance.NotebookInstanceName
  IAMRole:
    Value: !GetAtt SageMakerIamRole.Arn
